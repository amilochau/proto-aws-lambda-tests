name: Deploy
run-name: Deploy - ${{ github.ref }}

on:
  workflow_dispatch:
  push:
    branches:
    - main

concurrency: deploy

env:
  INFRA_WORKSPACE_DEV: dev
  INFRA_AWS_ROLE: arn:aws:iam::266302224431:role/github-shd-role
  INFRA_AWS_REGION: eu-west-3
  PROJECT_API_SOLUTION: './src/proto-api/Milochau.Proto.Functions.sln'
  PROJECT_API_PUBLISH_FILTER: '*/bin/Release/net7.0/linux-x64/publish/bootstrap'

jobs:
  build_iac:
    name: Build (IaC)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and test projects
        uses: amilochau/github-actions/build/terraform@v3

  build_api:
    name: Build (API)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build AWS Lambda functions
        uses: amilochau/github-actions/build/lambda-functions@amilochau/create-artifact-lambda-build
        with:
          solutionPath: ${{ env.PROJECT_API_SOLUTION }}
          publishPathFilter: ${{ env.PROJECT_API_PUBLISH_FILTER }}

  deploy_dev:
    name: Deploy (DEV)
    needs: [build_iac, build_api]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: DEV
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-lambda-functions-compressed

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.INFRA_AWS_ROLE }}
          aws-region: ${{ env.INFRA_AWS_REGION }}

      - name: Deploy Terraform module
        uses: amilochau/github-actions/deploy/terraform@v3
        with:
          workspaceName: ${{ env.INFRA_WORKSPACE_DEV }}
